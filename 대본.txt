안녕하세요 비트코인자동트레이딩app을 개발한 팀BATS의 발표를 맡게된 장종엽이라고 합니다. 발표 시작하겟습니다.

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

먼저 진행하기에 앞서 짧게 발표내용에 대해 말씀드리겟습니다. 
프로젝트 주제와 개발동기,   주요 개발 내용과 기능  그리고 개발 후기순으로 진행됩니다.

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

먼저 프로젝트의 주제입니다. 저희의 BATS는 머신러닝을 이용해 가상화폐를 자동 트레이딩 할수있는 APP입니다. 


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
만들게 된 동기는 먼저 평소 조원들이 비트코인에 대한 흥미와 관심을 가지고있었고, 서버통신, APP개발, 딥러닝등을 모두 공부하면서
진행 할 수 있엇고 많은 자동매매 프로그램중에 어플을 통한 접근방식이 거의 없었기 때문에 만들어 보게 되었습니다.

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
다음으론 개발일정에 대해서 입니다. 10월에 주제가 정해지고 개발환경구축 11월에 DB와 UI 서버설계 
이번학기에 와서 딥러닝 데이터학습과 알고리즘개선으로 진행 하였습니다.

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
조원들이 3파트로 나누어 개발을 진행했습니다. 안드로이드 스튜디오를 이용한 어플리케이션개발, 
디장고를 이용한 서버개발, 파이썬을 이용한 머신러닝학습으로 나눠진행됩니다.

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
먼저 어플리케이션 개발입니다.
로그인 화면과, 회원가입, ID/PW 찾기 화면입니다
로그인 화면에서는 EncryptedSharedPreferences 를 이용한 자동 로그인 기능이 있어 임의의 보안 폴더에 id, pw 를 저장시켜 자동 로그인을 수행하게 합니다.

회원가입 화면에서는 ID중복을 서버에서 확인하고, 이메일 형식을 검증하며, 서버의 DB에 회원정보를 전송합니다

ID/PW 찾기 화면에서는 임의의 토큰값을 이메일로 전송하여 그와 맞으면 ID공개, PW 재설정 기능을 제공합니다
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
다음은 메인화면 / 거래단위 버튼 / 거래 기록 버튼 입니다
메인 화면에서는 업비트 서버에서 1분봉 데이터를 받아와 MPAndroidChart 라이브러리로 Candlestick Chart 를 생성합니다. 
이는 1분마다 갱신됩니다 또한 서버로부터 실시간으로 거래기록, 보유금액, 수익률을 받아와 사용자에게 보여줍니다
거래 단위 버튼을 누르면 거래단위 변경 창이 생성되며 변경시 서버에 해당 유저 거래단위 금액을 변경시킵니다
서버로부터 받아온 거래 기록을 SQLite에 저장시키고 거래 기록 버튼을 누르면 해당 DB에 내용들을 나열시켜 거래 기록을 사용자에게 보여줍니다
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
마지막으로 Notification 설정 창과 실제 Notification 입니다
어플 실행 시 Notification 권한이 부여되어있지 않다면 자동으로 해당 설정 창으로 이동시켜 권한을 부여받습니다
자동거래가 진행되면 서버로부터 실시간으로 정보를 받아와 알람에 띄워 수익률을 보다 쉽게 볼 수 있게 했습니다
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
다음으로는 서버개발입니다. 
어플리케이션 특성상 데이터 수집과 딥러닝을 하기 때문에 서버도 파이썬을 기반으로 하는 장고 프레임워크를 사용하게되었습니다. 
Mtv, 즉 model view template 개발 패턴을 사용하여 좀 더 손쉽게 구조화하고 개발했습니다.
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
아무래도 웹프레임워크다 보니, 어플리케이션 서버와는 좀 다른 느낌이있어서 어떤 클라이언트에도 잘 적용할수있는 
rest_api서버를 지원하는 django-restframework프레임워크도 사용했습니다.
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
24시간 자동매매를 위해 aws에서 무료로 제공하는 ec2 ubuntu linux서버에 git을 통해 서버코드를 배포하였습니다. 
마지막으로 소개되진않았지만 자동매매 버튼을 누르면 클라이언트가 더이상의 신호를 보내지않아도 서버에서 
매도,매수가 이루어질때마다 클라이언트에 신호를 보낼수있어야 하다보니 파이어베이스의 fcm기능을 사용하여 
매도,매수 기록,또는 수익률이 실시간으로 어플에 표시되게 개발하였습니다
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
마지막으로 자동매매와 딥러닝에 대해 발표 하겠습니다.
비트코인의 가격은 시간에 따라 변동을 보여주는 시계열 데이터로 해석할 수 있습니다.
그래서 비트코인 차트를 시계열 데이터의 관점에서 분석하여 다음 가격의 변동을 예측해 자동으로 매도하거나 매수할 수 있게 구현 했습니다.
먼저 데이터의 학습을 위해 시계열 데이터의 학습에서 주로 쓰이는 순환신경망(RNN)의 GRU모델을 이용하여 학습을 진행했습니다.

학습을위해 먼저 NUMPY라이브러리를 이용해 데이터를 배열로 변환한뒤 Scikit-learn라이브러리의 Min-Max 스케일링을 이용해 데이터의 전처리를 진행하였고 
Tensorflow를 기반으로 한 keras를 사용하여 GRU모델을 구성하엿고 업비트 API를 통해 가져온 데이터를 이용해 모델을 훈련시킨뒤 다음 시점의 가격예측에 사용했습니다.

그 후, 예측한데이터의 값을 현재 가격과 비교해 일정이상의 변동이 보이면 매매를 진행하는 변동성 돌파 매매전략을 이용해 거래가 진행되고, 
매매가 진행된 이후에 다시 다음 1분데이터를 예측하여 전략에따른 매매를 반복하는 식으로 프로그램이 작동합니다